#include "Peak.h"

namespace Feature
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Peak::Peak( size_t positionIndex ) :
   m_positionIndex( positionIndex ),
   m_leftBoundIndex( 0 ),
   m_rightBoundIndex( 0 ),
   m_position( 0 ),
   m_prominence( 0 ),
   m_width( 0 ),
   m_pedestal( 0 ),
   m_leftNeighbour( 0 ),
   m_rightNeighbour( 0 )
{}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// destructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Peak::~Peak()
{}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setLeftNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Peak::setLeftNeighbourPeak( Peak* peak )
{
   m_leftNeighbour = peak;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setRightNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Peak::setRightNeighbourPeak( Peak* peak )
{
   m_rightNeighbour = peak;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getLeftNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Peak* Peak::getLeftNeighbourPeak()
{
   return m_leftNeighbour;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getRightNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Peak* Peak::getRightNeighbourPeak()
{
   return m_rightNeighbour;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getLeftNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const Peak* Peak::getLeftNeighbourPeak() const
{
   return m_leftNeighbour;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getRightNeighbourPeak
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const Peak* Peak::getRightNeighbourPeak() const
{
   return m_rightNeighbour;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setBoundIndices
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Peak::setBoundIndices( size_t leftIndex, size_t rightIndex )
{
   m_leftBoundIndex = leftIndex;
   m_rightBoundIndex = rightIndex;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getLeftBoundIndex
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
size_t Peak::getLeftBoundIndex() const
{
   return m_leftBoundIndex;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getRightBoundIndex
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
size_t Peak::getRightBoundIndex() const
{
   return m_rightBoundIndex;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setData
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Peak::setData( const RealVector& data )
{
   m_data = data;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getData
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const RealVector& Peak::getData() const
{
   return m_data;
}

} /// namespace Feature
