#include "FourierSpectrum.h"

#include "FourierTransform.h"

namespace WaveAnalysis
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FourierSpectrum::FourierSpectrum( const FourierTransform& transform, const Complex* first, const Complex* last ) :
   ComplexVector( first, last ),
   m_transform( transform )
{}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMagnitudeInBin
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double FourierSpectrum::getMagnitudeInBin( size_t binIndex ) const
{
   return abs( (*this)[binIndex] );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getPhaseInBin
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double FourierSpectrum::getPhaseInBin( size_t binIndex ) const
{
   return arg( (*this)[binIndex] );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMagnitude
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RealVector FourierSpectrum::getMagnitude() const
{
   RealVector result( size() );
   for ( size_t i = 0; i < size(); ++i )
   {
      result[i] = abs( (*this)[i] );
   }
   return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getPhase
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RealVector FourierSpectrum::getPhase() const
{
   RealVector result( size() );
   for ( size_t i = 0; i < size(); ++i )
   {
      result[i] = arg( (*this)[i] );
   }
   return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getSamplingInfo
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const SamplingInfo& FourierSpectrum::getSamplingInfo() const
{
   return m_transform.getSamplingInfo();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getFrequencyOfin
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double FourierSpectrum::getFrequencyOfBin( size_t binIndex ) const
{
   return m_transform.getSpectrumFrequencies()[binIndex];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getFrequencies
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const RealVector& FourierSpectrum::getFrequencies() const
{
   return m_transform.getSpectrumFrequencies();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getFrequency
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double FourierSpectrum::getFrequency( double x ) const
{
   return m_transform.getLowestFrequency() * x;
}

} /// namespace WaveAnalysis
