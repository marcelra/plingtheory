#include "Hist2DItem.h"

#include "PaintArea.h"
#include "PcPixmapPaint.h"
#include "Regular2DHistogram.h"

#include <QColor>
#include <QPainter>

namespace Plotting
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Hist2DItem::Hist2DItem( const Math::Regular2DHistogram& hist2D ) :
   m_pixmap( hist2D.getNumBinsX(), hist2D.getNumBinsY() ),
   m_minX( hist2D.getMinX() ),
   m_maxX( hist2D.getMaxX() ),
   m_minY( hist2D.getMinY() ),
   m_maxY( hist2D.getMaxY() )
{
   double max = hist2D.getMaximum();
   double min = hist2D.getMinimum();
   double zTot = max - min;

   QPainter p;
   p.begin( &m_pixmap );

   for ( size_t iX = 0; iX < hist2D.getNumBinsX(); ++iX )
   {
      for ( size_t iY = 0; iY < hist2D.getNumBinsY(); ++iY )
      {
         double z = 1 - ( hist2D.getBinContent( iX, iY ) - min ) / zTot;
         /// Due to rounding errors, z can be smaller than zero.
         z = z < 0 ? 0 : z;
         QColor colour;
         colour.setRedF( z );
         colour.setGreenF( z );
         colour.setBlueF( z );
         p.setPen( colour );
         p.drawPoint( QPoint( iX, hist2D.getNumBinsY() - iY - 1 ) );
      }
   }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMinX
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double Hist2DItem::getMinX() const
{
   return m_minX;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMaxX
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double Hist2DItem::getMaxX() const
{
   return m_maxX;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMinY
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double Hist2DItem::getMinY() const
{
   return m_minY;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// getMaxY
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
double Hist2DItem::getMaxY() const
{
   return m_maxY;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// generatePlotCommands
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Hist2DItem::generatePlotCommands( PaintArea* paintArea ) const
{
   const QRectF& viewport = paintArea->getViewport();
   QRectF histDataRange( getMinX(), getMaxY(), getMaxX() - getMinX(), -( getMaxY() - getMinY() ) );

   PcPixmapPaint* pcPixmapPaint = new PcPixmapPaint( m_pixmap, histDataRange, viewport );
   paintArea->addPaintCommand( pcPixmapPaint );
}

} /// namespace Plotting
