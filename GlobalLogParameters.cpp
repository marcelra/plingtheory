#include "GlobalLogParameters.h"

#include "Logger.h"

////////////////////////////////////////////////////////////////////////////////
/// theInstance
////////////////////////////////////////////////////////////////////////////////
GlobalLogParameters* GlobalLogParameters::theInstance = 0;

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters::getInstance
////////////////////////////////////////////////////////////////////////////////
const GlobalLogParameters& GlobalLogParameters::getInstance()
{
   if ( !theInstance )
   {
      theInstance = new GlobalLogParameters();
   }
   return *theInstance;
}

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters constructor
////////////////////////////////////////////////////////////////////////////////
GlobalLogParameters::GlobalLogParameters() :
   nameFieldWidth( 20 ),
   levelFieldWidth( 12 ),
   spacerWidth( 2 ),
   threshold( Msg::Verbose )
{
}

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters::getNameFieldWidth
////////////////////////////////////////////////////////////////////////////////
size_t GlobalLogParameters::getNameFieldWidth() const
{
   return nameFieldWidth;
}

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters::getLevelFieldWidth
////////////////////////////////////////////////////////////////////////////////
size_t GlobalLogParameters::getLevelFieldWidth() const
{
   return levelFieldWidth;
}

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters::getSpaceWidth
////////////////////////////////////////////////////////////////////////////////
size_t GlobalLogParameters::getSpacerWidth() const
{
   return spacerWidth;
}

////////////////////////////////////////////////////////////////////////////////
/// GlobalLogParameters::getThreshold
////////////////////////////////////////////////////////////////////////////////
const Msg::LogLevel& GlobalLogParameters::getThreshold() const
{
   return threshold;
}

////////////////////////////////////////////////////////////////////////////////
/// setThreshold
////////////////////////////////////////////////////////////////////////////////
void GlobalLogParameters::setThreshold( Msg::LogLevel threshold )
{
   this->threshold = threshold;
}

