#include "MlpTrainer.h"

namespace Mva
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MlpTrainer::MlpTrainer( Mlp2& mlp ) :
   m_mlp( mlp ),
   m_numIterations( 100 )
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// destructor
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MlpTrainer::~MlpTrainer()
{}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setInputData
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void MlpTrainer::setInputData( const std::vector<RealVector>& inputData, const std::vector<RealVector>& outputData )
{
   m_trainDataInput = &inputData;
   m_trainDataOutput = &outputData;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// setNumIterations
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void MlpTrainer::setNumIterations( size_t nIter )
{
   m_numIterations = nIter;
}

} /// namespace Mva
