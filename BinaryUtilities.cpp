#include "BinaryUtilities.h"

////////////////////////////////////////////////////////////////////////////////
/// compare
////////////////////////////////////////////////////////////////////////////////
bool BinaryUtilities::compare( const char* buffer, size_t pos, const char* compareTo, size_t len )
{
   const char* buf = buffer + pos;
   for ( size_t i = 0; i < len; ++i, ++buf )
   {
      if ( *buf != compareTo[i] )
      {
         return false;
      }
   }
   return true;
}

////////////////////////////////////////////////////////////////////////////////
/// readByte
////////////////////////////////////////////////////////////////////////////////
char BinaryUtilities::readByte( const char* buffer, size_t pos )
{
   return *( buffer + pos );
}

////////////////////////////////////////////////////////////////////////////////
/// readShort
////////////////////////////////////////////////////////////////////////////////
short BinaryUtilities::readShort( const char* buffer, size_t pos )
{
   return *reinterpret_cast< const short* >( buffer + pos );
}

////////////////////////////////////////////////////////////////////////////////
/// readInt
////////////////////////////////////////////////////////////////////////////////
int BinaryUtilities::readInt( const char* buffer, size_t pos )
{
   return *reinterpret_cast< const int* >( buffer + pos );
}

////////////////////////////////////////////////////////////////////////////////
/// writeByte
////////////////////////////////////////////////////////////////////////////////
void BinaryUtilities::writeByte( char* buffer, size_t pos, char value )
{
   buffer[ pos ] = value;
}

////////////////////////////////////////////////////////////////////////////////
/// writeShort
////////////////////////////////////////////////////////////////////////////////
void BinaryUtilities::writeShort( char* buffer, size_t pos, short value )
{
   char* byteArr = reinterpret_cast< char* >( &value );
   buffer += pos;
   *buffer++ = *byteArr++;
   *buffer = *byteArr;
}

////////////////////////////////////////////////////////////////////////////////
/// writeInt
////////////////////////////////////////////////////////////////////////////////
void BinaryUtilities::writeInt( char* buffer, size_t pos, int value )
{
   char* byteArr = reinterpret_cast< char* >( &value );
   buffer += pos;
   *buffer++ = *byteArr++;
   *buffer++ = *byteArr++;
   *buffer++ = *byteArr++;
   *buffer = *byteArr;
}

////////////////////////////////////////////////////////////////////////////////
/// writeCString
////////////////////////////////////////////////////////////////////////////////
void BinaryUtilities::writeCString( char* buffer, size_t pos, const char* string )
{
   buffer += pos;
   while ( *string )
   {
      *buffer++ = *string++;
   }
}

